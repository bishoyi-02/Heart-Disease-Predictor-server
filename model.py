# -*- coding: utf-8 -*-
"""Copy of random_forest_classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W4K77_-0Hngu-YQRkGRS4R5RGmEPnBZ6

# Random Forest Classification

## Importing the libraries
"""

import numpy as np
# import matplotlib.pyplot as plt
import pandas as pd
import pickle

"""## Importing the dataset"""

dataset = pd.read_csv('heart.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)
# print(type(X_train[0]))
# print(X_train)

# print(X_test)

"""## Feature Scaling"""

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)
# print(X_train[0])
"""## Training the Random Forest Classification model on the Training set"""

from sklearn.ensemble import RandomForestClassifier
classifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)
classifier.fit(X_train, y_train)

"""## Making the Confusion Matrix"""

from sklearn.metrics import confusion_matrix, accuracy_score
y_pred = classifier.predict(X_test)
cm = confusion_matrix(y_test, y_pred)
# print(cm)
accuracy_score(y_test, y_pred)

from sklearn.model_selection import cross_val_score
accuracies = cross_val_score(estimator=classifier,X=X_train,y=y_train,cv=10)
# print("Accuracy: {:.2f} %".format(accuracies.mean()*100))
# print("Standard Deviation: {:.2f} %".format(accuracies.std()*100))
pickle.dump(classifier,open('model.pkl','wb'))
pickle.dump(sc,open('sc.pkl','wb'))

# model = pickle.load(open('model.pkl','rb'))
# testdata=np.array([[54,1,2,120,258,0,0,147,0,0.4,1,0,3]])
# testdata=sc.transform(testdata)
# print(testdata)
# print(model.predict(testdata))